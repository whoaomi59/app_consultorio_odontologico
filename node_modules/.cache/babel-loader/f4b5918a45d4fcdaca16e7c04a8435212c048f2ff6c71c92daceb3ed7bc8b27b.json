{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const NavigationContext=/*#__PURE__*/createContext();export const NavigationProvider=_ref=>{let{children}=_ref;const[currentView,setCurrentView]=useState('home');const[user,setUser]=useState(null);// ahora usamos user\nconst navigateTo=view=>{if(view==='admin'&&!user){setCurrentView('login');}else if(view==='logout'){setUser(null);setCurrentView('home');}else{setCurrentView(view);}};const login=()=>{setUser({username:'admin'});setCurrentView('agenda');};return/*#__PURE__*/_jsx(NavigationContext.Provider,{value:{currentView,navigateTo,user,login},children:children});};export const useNavigate=()=>{const context=useContext(NavigationContext);if(!context){throw new Error('useNavigate must be used within a NavigationProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","NavigationContext","NavigationProvider","_ref","children","currentView","setCurrentView","user","setUser","navigateTo","view","login","username","Provider","value","useNavigate","context","Error"],"sources":["C:/Users/whoaomi/Downloads/project (2)/src/utils/navigation.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst NavigationContext = createContext();\n\nexport const NavigationProvider = ({ children }) => {\n  const [currentView, setCurrentView] = useState('home');\n  const [user, setUser] = useState(null); // ahora usamos user\n\n  const navigateTo = (view) => {\n    if (view === 'admin' && !user) {\n      setCurrentView('login');\n    } else if (view === 'logout') {\n      setUser(null);\n      setCurrentView('home');\n    } else {\n      setCurrentView(view);\n    }\n  };\n\n  const login = () => {\n    setUser({ username: 'admin' });\n    setCurrentView('agenda');\n  };\n\n  return (\n    <NavigationContext.Provider value={{ \n      currentView, \n      navigateTo, \n      user, \n      login \n    }}>\n      {children}\n    </NavigationContext.Provider>\n  );\n};\n\nexport const useNavigate = () => {\n  const context = useContext(NavigationContext);\n  if (!context) {\n    throw new Error('useNavigate must be used within a NavigationProvider');\n  }\n  return context;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,iBAAiB,cAAGL,aAAa,CAAC,CAAC,CAEzC,MAAO,MAAM,CAAAM,kBAAkB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7C,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGR,QAAQ,CAAC,MAAM,CAAC,CACtD,KAAM,CAACS,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAAE;AAExC,KAAM,CAAAW,UAAU,CAAIC,IAAI,EAAK,CAC3B,GAAIA,IAAI,GAAK,OAAO,EAAI,CAACH,IAAI,CAAE,CAC7BD,cAAc,CAAC,OAAO,CAAC,CACzB,CAAC,IAAM,IAAII,IAAI,GAAK,QAAQ,CAAE,CAC5BF,OAAO,CAAC,IAAI,CAAC,CACbF,cAAc,CAAC,MAAM,CAAC,CACxB,CAAC,IAAM,CACLA,cAAc,CAACI,IAAI,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClBH,OAAO,CAAC,CAAEI,QAAQ,CAAE,OAAQ,CAAC,CAAC,CAC9BN,cAAc,CAAC,QAAQ,CAAC,CAC1B,CAAC,CAED,mBACEN,IAAA,CAACC,iBAAiB,CAACY,QAAQ,EAACC,KAAK,CAAE,CACjCT,WAAW,CACXI,UAAU,CACVF,IAAI,CACJI,KACF,CAAE,CAAAP,QAAA,CACCA,QAAQ,CACiB,CAAC,CAEjC,CAAC,CAED,MAAO,MAAM,CAAAW,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,OAAO,CAAGnB,UAAU,CAACI,iBAAiB,CAAC,CAC7C,GAAI,CAACe,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,sDAAsD,CAAC,CACzE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}